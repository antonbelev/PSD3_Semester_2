Better formatted file can be found here:

https://docs.google.com/document/d/1u4LDNpDM24pM7r9GAZL9lBWTLH-snn0CjxcfaJlZ43k/edit

User story 1
    attributes.Data.java is holding hash maps of courses, students and sessions available. To test if the lecturer is importing successfully courses we need to invoke the method public void importCourseFromMyCampus(MyCampusService myCampusService). 

    Acceptance conditions - if the invocation of this method has populated the courses, students and sessions with the same data as the dummy data provided by the MyCampusService then the method should pass the JUnit test case.

User story 2
    Acceptance conditions - if the invocation of the method addSessionToCourse assosiated with the lecturer instance successfully adds the new session to an existing course then the JUnit test case is passed.

User story 4

    Acceptance conditions - if the invocation of the method specifySessionTimeframe successfully changes the time frame of the session specified - then the JUnit test case pass successfully.

User story 8
    
    Acceptance conditions - if the invocation of the method assignRoomToSlot with parameters  roomName and sessionName, successfully assign room to the already existing session, then the JUnit test case should pass.

User story 11

    Acceptance conditions - if the method bookCourseSessionSlots successfully assigns an existing student to an existing session then the new student should appear in the students hashmap inside this existing session. If that is the case the JUnit test case should pass.

User story 12

    Acceptance conditions - CheckCoursesCompousorySessionsTest initializes some data in order to check later if the invocation of the method checkCoursesCompousorySessions will return the expected string of compulsory sessions.

User story 14

    Acceptance conditions - SeeSessionSlotsInformationTest initializes some initial data. Then if the returned result by the seeSessionSlotsInformation method matches the expected string the JUnit test case should pass

User story 23

    Acceptance conditions - CreateSlotForSessionTest initializes a session for the testing purposes. Then the method createSlotForSession should be able to set the start and the end dates for this session. If after the execution of this method the new dates appear for this session the the JUnit test case should pass.


Security/0

	The system shall authenticate users via the MyCampus single sign-on service.
	Acceptance conditions - UserLoginTest 

Security/1

	The system shall distinguish between lecturers, administrators, tutors and student roles.
	Acceptance conditions -

interoperability/0

	The system shall be implemented as one or more OSGi bundles.

performance/0

	The system shall support at least 100 courses.

performance/1

	The system shall support at least 10 different session types per course.

performance/2

	The system shall support at least 1000 different users.

performance/3

	The system shall support at least 20 different timetable slots per session.

performance/4

	The system shall support at least 100 different concurrently active users

